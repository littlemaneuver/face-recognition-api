x-app: &default-app
  build:
    context: "."
    target: "app"
    args:
      - "UID=${UID:-1000}"
      - "GID=${GID:-1000}"
      - "FLASK_DEBUG=${FLASK_DEBUG:-false}"
      - "NODE_ENV=${NODE_ENV:-production}"
  depends_on:
    - "postgres"
  env_file:
    - ".env"
  restart: "unless-stopped"
  stop_grace_period: "3s"
  tty: true
  volumes:
    - "${DOCKER_SERVICE_VOLUME}"

services:
  postgres:
    deploy:
      resources:
        limits:
          cpus: "${DOCKER_POSTGRES_CPUS:-0}"
          memory: "${DOCKER_POSTGRES_MEMORY:-0}"
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: "${POSTGRES_DB}"
    image: "postgres:15.3"
    restart: "${DOCKER_RESTART_POLICY:-unless-stopped}"
    stop_grace_period: "3s"
    ports:
     - 5432:5432
    volumes:
      - "postgres:/var/lib/postgresql/data"

  app:
    <<: *default-app
    deploy:
      resources:
        limits:
          cpus: "${DOCKER_SERVICE_CPUS:-0}"
          memory: "${DOCKER_SERVICE_MEMORY:-0}"
    healthcheck:
      test: "${DOCKER_SERVICE_HEALTHCHECK_TEST:-curl localhost:8000/up}"
      interval: "60s"
      timeout: "3s"
      start_period: "5s"
      retries: 3
    ports:
      - "${DOCKER_SERVICE_PORT_FORWARD:-127.0.0.1:8000}:${PORT:-8000}"

volumes:
  postgres: {}
